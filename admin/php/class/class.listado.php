<?php
/*------------------------------------------------------
CLASSNAME:       	listado
GENERATION DATE:	07.02.2017
CLASS FILE:      	class.listado.php
--------------------------------------------------------
CODE GENERATED BY: dixernet
------------------------------------------------------*/
include_once('class.database.php');
include_once('class.canje.php');
include_once('class.paginado.php');

//CLASS DECLARATION
//====================================================================================================
class listado
{ // class : begin

//ATTRIBUTE DECLARATION
//====================================================================================================
var $database;	// Instance of class database
var $paginado; 	// Instance of class paginado
var $pagina;
var $regxpag;
var $propagar;

//CONSTRUCTOR METHOD
//====================================================================================================
function listado($pagina=0, $regxpag=10000){
	if(!isset($_SESSION)) {session_start();}
	$this->pagina		= $pagina;
	$this->regxpag	= $regxpag;
}

//METHODS
//====================================================================================================
function compararFechas($primera, $segunda){
  $valoresPrimera = explode ('/', $primera);
  $valoresSegunda	= explode ('/', $segunda);

  $diaPrimera   = $valoresPrimera[0];
  $mesPrimera  	= $valoresPrimera[1];
  $anyoPrimera	= $valoresPrimera[2];

  $diaSegunda  	= $valoresSegunda[0];
  $mesSegunda 	= $valoresSegunda[1];
  $anyoSegunda	= $valoresSegunda[2];

  $diasPrimeraJuliano = gregoriantojd($mesPrimera, $diaPrimera, $anyoPrimera);
  $diasSegundaJuliano	= gregoriantojd($mesSegunda, $diaSegunda, $anyoSegunda);

  if(!checkdate($mesPrimera, $diaPrimera, $anyoPrimera)){
    // "La fecha ".$primera." no es v�lida";
    return 0;
  }	elseif(!checkdate($mesSegunda, $diaSegunda, $anyoSegunda)) {
    // "La fecha ".$segunda." no es v�lida";
    return 0;
  }
	else
	  return  $diasPrimeraJuliano - $diasSegundaJuliano;
}

//-------------------------------------------------------------------------------------------------------------------------------------
function getUsuariosPorRango($rango){
	$this->database = new Database();
	$arreglo = array();
	$i = 0;

	$sql 		= "select distinct nombre, apellido from socios where rango = '$rango' order by apellido asc, nombre asc";
	$result = $this->database->query($sql);
	$result = $this->database->result;	
	while ($row = mysql_fetch_object($result)){
		$arreglo[$i]['nombre']	= $row->nombre;
		$arreglo[$i]['apellido']= $row->apellido;
		$i++;
	}
	//retornar el arreglo
	return $arreglo;
}

//-------------------------------------------------------------------------------------------------------------------------------------
function getRankingMes($mes,$anio,$grupo){
	$this->database = new Database();
	$arreglo = array();
	$i = 0;

	//$sql = "SELECT SUM(p.puntos) AS suma, p.idcliente, p.ranking_mes, p.ranking_total, s.nombre as nombre_socio, s.apellido as apellido_socio, s.idtipo AS grupo, s.region AS equipo FROM puntos p, socios s WHERE p.idcliente = s.idsocio AND MONTH(p.fecha) = '$mes' AND YEAR(p.fecha) = '$anio' GROUP BY p.idcliente ORDER BY suma DESC";
	$sql = "SELECT
						SUM(p.puntos) AS suma,
						p.idcliente,
						p.ranking_mes,
						p.ranking_total,
						s.nombre AS nombre_socio,
						s.apellido AS apellido_socio,
						s.idtipo AS grupo,
						s.region AS equipo,
						(select pp.ranking_mes from puntos pp where pp.idcliente = p.idcliente and pp.ranking_mes IS NOT NULL and MONTH(p.fecha) = MONTH(pp.fecha) order by pp.fecha desc, pp.fecha_carga desc limit 1) as ranking_month
					FROM puntos p, socios s
					WHERE
						p.idcliente = s.idsocio
						AND MONTH(p.fecha) = '$mes'
						AND YEAR(p.fecha) = '$anio'
						AND s.idtipo = '$grupo'
						AND p.ranking_mes is not null
						GROUP BY p.idcliente
						ORDER BY ranking_month ASC
					";

	$result = $this->database->query($sql);
	$result = $this->database->result;
	while ($row = mysql_fetch_object($result)){
		$arreglo[$i]['suma']					= $row->suma;
		$arreglo[$i]['idcliente']			= $row->idcliente;
		$arreglo[$i]['ranking_mes']		= $row->ranking_mes;
		$arreglo[$i]['ranking_total']	= $row->ranking_total;
		$arreglo[$i]['nombre']				= ''; //$row->nombre_socio;
		$arreglo[$i]['apellido']			= $row->apellido_socio;
		$arreglo[$i]['grupo']					= $row->grupo;
		$arreglo[$i]['equipo']				= str_replace('DIRECTA ','',$row->equipo);
		$i++;
	}
	//retornar el arreglo
	return $arreglo;
}

//-------------------------------------------------------------------------------------------------------------------------------------
function getUltimoMes($idcliente){
	$this->database = new Database();
	$arreglo = array();
	$i = 0;

	$sql = "SELECT MONTH(fecha) AS mes FROM puntos p, socios s WHERE p.idcliente = s.idsocio AND p.idcliente  = '$idcliente' ORDER BY p.identrada DESC LIMIT 1";

	$result = $this->database->query($sql);
	$result = $this->database->result;
	if ($row = mysql_fetch_object($result)){
		return $row->mes;
	}
	//retornar el arreglo
	return date("m");
}

//-------------------------------------------------------------------------------------------------------------------------------------
function getLineasComercialesMes($id,$mes,$anio){
	$this->database = new Database();
	$arreglo = array();
	$i = 0;

	$sql = "SELECT distinct(linea) as linea_comercial FROM puntos WHERE idcliente = '$id' AND MONTH(fecha) = '$mes' AND YEAR(fecha) = '$anio'";

	$result = $this->database->query($sql);
	$result = $this->database->result;
	while ($row = mysql_fetch_object($result)){
		$arreglo[$i]['linea_comercial'] = $row->linea_comercial;
		$i++;
	}
	//retornar el arreglo
	return $arreglo;
}

//-------------------------------------------------------------------------------------------------------------------------------------
function getObjetivosMes($mes,$anio,$id,$linea){
	$this->database = new Database();
	$arreglo = array();
	$i = 0;

	$sql = "SELECT puntos AS suma, objetivo, avance, avance_por FROM puntos WHERE idcliente = '$id' AND MONTH(fecha) = '$mes' AND YEAR(fecha) = '$anio' and linea = '$linea'  ORDER BY identrada DESC LIMIT 1 ";

	$result = $this->database->query($sql);
	$result = $this->database->result;
	while ($row = mysql_fetch_object($result)){
		$arreglo[$i]['objetivo']		= $row->objetivo;
		$arreglo[$i]['suma']				= $row->suma;
		$arreglo[$i]['avance']			= $row->avance;
		$arreglo[$i]['avance_por']	= $row->avance_por;
		$i++;
	}
	//retornar el arreglo
	return $arreglo;
}

//-------------------------------------------------------------------------------------------------------------------------------------
function getProvinciasCombo(){
	$this->database = new Database();
	$arreglo = array();
	$i = 0;

	$sql 		= 'select * from provincias where 1 = 1 order by orden asc';
	$result = $this->database->query($sql);
	$result = $this->database->result;	
	while ($row = mysql_fetch_object($result)){
		$arreglo[$i]['idprovincia']	= $row->idprovincia;
		$arreglo[$i]['provincia']		= $row->provincia;
		$i++;
	}
	//retornar el arreglo
	return $arreglo;
}

//-------------------------------------------------------------------------------------------------------------------------------------
function getLocalidadesCombo($provincia=''){
	$this->database = new Database();
	$arreglo = array();
	$i = 0;

	$sql = 'select * from localidades where 1 = 1';
	if($provincia	!='') $sql .= " and provincia = '$provincia'";
	$sql .= ' order by localidad asc';

	$result = $this->database->query($sql);
	$result = $this->database->result;
	while ($row = mysql_fetch_object($result)){
		$arreglo[$i]['idlocalidad']	= $row->idlocalidad;
		$arreglo[$i]['localidad']		= $row->localidad;
		$i++;
	}
	//retornar el arreglo
	return $arreglo;
}

//-------------------------------------------------------------------------------------------------------------------------------------
function getNoticias($buscar=''){
	$busqueda = array();
	if($buscar != '') $busqueda = preg_split('/ /',$buscar);
	$fin = count($busqueda);

	//crear la conexion
	$this->database = new Database();
	$this->database->OpenLink();
	$this->database->SelectDB();

	//crear e instancear el paginado
	$this->paginado = new paginado($this->database->link);
	$this->paginado->pagina($this->pagina);
	$this->paginado->porPagina($this->regxpag);

	$sql = 'select * from noticias where 1 = 1';
	if($fin>0){
		for($j=0;$j<$fin;$j++){
			$sql .= " and (titulo like '%".$busqueda[$j]."%' or cuerpo like '%".$busqueda[$j]."%')";
		}
	}
	$sql .= ' order by fecha_alta desc, idnoticia desc';

	//armar el arreglo de objetos	
	$this->paginado->query($sql);
	$arreglo = array();	
	$i=0;
	while($row = $this->paginado->obtenerArray()){
		$arreglo[$i]['idnoticia']		= $row['idnoticia'];
		$arreglo[$i]['titulo']			= stripslashes($row['titulo']);
		$arreglo[$i]['cuerpo']			= stripslashes($row['cuerpo']);
		$arreglo[$i]['fecha_alta']	= $row['fecha_alta'];
		$arreglo[$i]['imagen']			= stripslashes($row['imagen']);
		$arreglo[$i]['video']				= stripslashes($row['video']);
		$i++;
	}		
	//retornar el arreglo
	return $arreglo;
}

//-------------------------------------------------------------------------------------------------------------------------------------
function getNoticiasFront(){
	$this->database = new Database();
	$arreglo = array();
	$i = 0;

	$sql = "select * from noticias where 1 = 1 order by fecha_alta desc, idnoticia desc";

	$result = $this->database->query($sql);
	$result = $this->database->result;
	while ($row = mysql_fetch_object($result)){
		$arreglo[$i]['idnoticia']		= $row->idnoticia;
		$arreglo[$i]['titulo']			= $row->titulo;
		$arreglo[$i]['cuerpo']			= $row->cuerpo;
		$arreglo[$i]['imagen']			= $row->imagen;
		$arreglo[$i]['video']				= $row->video;
		$arreglo[$i]['fecha_alta']	= $row->fecha_alta;
		$i++;
	}
	//retornar el arreglo
	return $arreglo;
}

//-------------------------------------------------------------------------------------------------------------------------------------
function getMensajes($estado=''){
	//crear la conexion
	$this->database = new Database();
	$this->database->OpenLink();
	$this->database->SelectDB();

	//crear e instancear el paginado
	$this->paginado = new paginado($this->database->link);
	$this->paginado->pagina($this->pagina);
	$this->paginado->porPagina($this->regxpag);

	$sql = 'select m.* from mensajes m, socios s where m.idcliente = s.idsocio';
	if($estado!='') $sql .= " and m.estado = '".$estado."'";
	$sql .= ' order by m.fecha desc';

	//armar el arreglo de objetos	
	$this->paginado->query($sql);

	$arreglo = array();	
	$i=0;
	while($row = $this->paginado->obtenerArray()){
		$arreglo[$i]['idmensaje']	= $row['idmensaje'];
		$arreglo[$i]['fecha']			= $row['fecha'];
		$arreglo[$i]['mensaje']		= $row['mensaje'];
		$arreglo[$i]['estado']		= $row['estado'];
		$arreglo[$i]['idcliente']	= $row['idcliente'];
		$i++;
	}		
	//retornar el arreglo
	return $arreglo;
}

//obtiene los datos de los administradores y operadores existentes en la tabla 'usuarios'
//------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
function getUsuariosSistema($buscar='',$tipo=''){
	//crear la conexion
	$this->database = new Database();
	$this->database->OpenLink();
	$this->database->SelectDB();
		
	//crear e instancear el paginado
	$this->paginado = new paginado($this->database->link);
	$this->paginado->pagina($this->pagina);
	$this->paginado->porPagina($this->regxpag);
	
	$sql = 'select * from usuarios where 1 = 1';
	if($buscar!='') $sql .= " and usuario like '%".$buscar."%'";
	if($tipo!='') $sql .= " and tipo = '".$tipo."'";
	$sql .= ' order by usuario asc';
	
	//armar el arreglo de objetos	
	$this->paginado->query($sql);
	
	$arreglo = array();	
	$i=0;
	while($row = $this->paginado->obtenerArray())
	{
		$arreglo[$i]['idusuario']	= $row['idusuario'];
		$arreglo[$i]['tipo'] 				= $row['tipo'];
		$arreglo[$i]['usuario'] 		= $row['usuario'];
		$arreglo[$i]['clave'] 			= $row['clave'];
		$i++;
	}		
	//retornar el arreglo
	return $arreglo;
}

//obtiene los datos de los operadores (tipo = 'O') existentes en la tabla 'usuarios'
//----------------------------------------------------------------------------------------------------------------------------------------
function getOperadores($buscar=''){
	//crear la conexion
	$this->database = new Database();
	$this->database->OpenLink();
	$this->database->SelectDB();

	//crear e instancear el paginado
	$this->paginado = new paginado($this->database->link);
	$this->paginado->pagina($this->pagina);
	$this->paginado->porPagina($this->regxpag);

	$sql = 'select * from usuarios where 1 = 1';
	if($buscar!='') $sql .= " and (usuario like '%".$buscar."%')";
	$sql .= ' order by usuario asc';

	//armar el arreglo de objetos	
	$this->paginado->query($sql);

	$arreglo = array();	
	$i=0;
	while($row = $this->paginado->obtenerArray()){
		$arreglo[$i]['idusuario']	= $row['idusuario'];
		$arreglo[$i]['usuario'] 	= $row['usuario'];
		$arreglo[$i]['clave'] 		= $row['clave'];
		$i++;
	}
	//retornar el arreglo
	return $arreglo;
}

//--------------------------------------------------------------------------------------------------------------------------------------
function getClientes($buscar='',$idcliente='',$tipo='',$region='',$ejecutivo='',$jefe='',$gerente=''){
	$busqueda = array();
	if($buscar != '') $busqueda = preg_split('/ /',$buscar);

	//crear la conexion
	$this->database = new Database();
	$this->database->OpenLink();
	$this->database->SelectDB();

	//crear e instancear el paginado
	$this->paginado = new paginado($this->database->link);
	$this->paginado->pagina($this->pagina);
	$this->paginado->porPagina($this->regxpag);

	$sql = 'select * from socios where 1 = 1';
	$fin = count($busqueda);
	if($fin>0){
		for($j=0;$j<$fin;$j++){
			$sql .= " and (nombre like '%".$busqueda[$j]."%' or apellido like '%".$busqueda[$j]."%' or email like '%".$busqueda[$j]."%')";
		}
	}
	if($idcliente != '') $sql .= ' and idsocio = \''.$idcliente.'\'';
	//if($tipo != '') $sql .= ' and idtipo = \''.$tipo.'\'';
	if($tipo != '') $sql .= ' and idtipo in ('.$tipo.')';
	if($region != '') $sql .= ' and region = \''.$region.'\'';
	if($ejecutivo != '') $sql .= ' and ejecutivo like \'%'.$ejecutivo.'%\'';
	if($jefe != '') $sql .= ' and jefe like \'%'.$jefe.'%\'';
	if($gerente != '') $sql .= ' and gerente like \'%'.$gerente.'%\'';
	$sql .= ' order by fechaalta desc, apellido asc, nombre asc';

	//armar el arreglo de objetos
	$this->paginado->query($sql);
	$arreglo = array();
	$i=0;
	while($row = $this->paginado->obtenerArray())	{
		$arreglo[$i]['idsocio']		= $row['idsocio'];
		$arreglo[$i]['idtipo']		= $row['idtipo'];
		$arreglo[$i]['codigo']		= $row['codigo'];
		$arreglo[$i]['region']		= $row['region'];
		$arreglo[$i]['rango']			= $row['rango'];
		$arreglo[$i]['ejecutivo']	= stripslashes($row['ejecutivo']);
		$arreglo[$i]['jefe']			= stripslashes($row['jefe']);
		$arreglo[$i]['gerente']		= stripslashes($row['gerente']);
		$arreglo[$i]['nombre']		= stripslashes($row['nombre']);
		$arreglo[$i]['apellido']	= stripslashes($row['apellido']);
		$arreglo[$i]['email']			= $row['email'];
		$arreglo[$i]['clave']			= $row['clave'];
		$arreglo[$i]['direccion']	= stripslashes($row['direccion']);
		$arreglo[$i]['localidad']	= stripslashes($row['localidad']);
		$arreglo[$i]['provincia']	= stripslashes($row['provincia']);
		$arreglo[$i]['telefono']	= $row['telefono'];
		$arreglo[$i]['fechaalta']	= $row['fechaalta'];
		$i++;
	}
	//retornar el arreglo
	return $arreglo;
}

//---------------------------------------------------------------------------------------------------------------------------------------------------
function getClientesSinPaginar($buscar='',$tipo='',$region='',$ejecutivo='',$jefe='',$gerente=''){
	$busqueda = array();
	if($buscar != '') $busqueda = preg_split('/ /',$buscar);

	$this->database = new Database();
	$arreglo = array();
	$i = 0;

	$sql = 'select * from socios where 1 = 1';
	$fin = count($busqueda);
	if($fin>0){
		for($j=0;$j<$fin;$j++){
			$sql .= " and (nombre like '%".$busqueda[$j]."%' or apellido like '%".$busqueda[$j]."%' or email like '%".$busqueda[$j]."%')";
		}
	}
	if($idcliente != '') $sql .= ' and idsocio = \''.$idcliente.'\'';
	if($tipo != '') $sql .= ' and idtipo = \''.$tipo.'\'';
	if($region != '') $sql .= ' and region = \''.$region.'\'';
	if($ejecutivo != '') $sql .= ' and ejecutivo like \'%'.$ejecutivo.'%\'';
	if($jefe != '') $sql .= ' and jefe like \'%'.$jefe.'%\'';
	if($gerente != '') $sql .= ' and gerente like \'%'.$gerente.'%\'';
	$sql .= ' order by fechaalta desc, apellido asc, nombre asc';

	$result = $this->database->query($sql);
	$result = $this->database->result;	
	
	while ($row = mysql_fetch_object($result)){
		$arreglo[$i]['idsocio']		= $row->idsocio;
		$arreglo[$i]['idtipo']		= $row->idtipo;
		$arreglo[$i]['codigo']		= $row->codigo;
		$arreglo[$i]['region']		= $row->region;
		$arreglo[$i]['rango']			= $row->rango;
		$arreglo[$i]['ejecutivo']	= stripslashes($row->ejecutivo);
		$arreglo[$i]['jefe']			= stripslashes($row->jefe);
		$arreglo[$i]['gerente']		= stripslashes($row->gerente);
		$arreglo[$i]['nombre']		= stripslashes($row->nombre);
		$arreglo[$i]['apellido']	= stripslashes($row->apellido);
		$arreglo[$i]['email']			= $row->email;
		$arreglo[$i]['clave']			= $row->clave;
		$arreglo[$i]['direccion']	= stripslashes($row->direccion);
		$arreglo[$i]['localidad']	= stripslashes($row->localidad);
		$arreglo[$i]['provincia']	= stripslashes($row->provincia);
		$arreglo[$i]['telefono']	= $row->telefono;
		$arreglo[$i]['fechaalta']	= $row->fechaalta;
		$i++;
	}		
	//retornar el arreglo
	return $arreglo;
}

//obtiene el informe de la evolucion de las registraciones existentes en las tablas 'socios'
//--------------------------------------------------------------------------------------------------------------------------------------------------
function getClientesRegistrados($desde,$hasta){
	$this->database = new Database();
	$arreglo = array();
	$i = 0;
	
	$sql = "select * from socios where DATE_FORMAT(fechaalta, '%Y-%m-%d') >= STR_TO_DATE('$desde', '%d/%m/%Y') and DATE_FORMAT(fechaalta, '%Y-%m-%d') <= STR_TO_DATE('$hasta', '%d/%m/%Y') order by fechaalta asc";
	$result = $this->database->query($sql);
	$result = $this->database->result;	
	while ($row = mysql_fetch_object($result)){
		$arreglo[$i]['fechaalta']	= $row->fechaalta;
		$arreglo[$i]['idcliente']	= $row->idsocio;
		$arreglo[$i]['rango']			= $row->rango;
		$arreglo[$i]['region']		= $row->region;
		$arreglo[$i]['ejecutivo']	= $row->ejecutivo;
		$arreglo[$i]['jefe']			= $row->jefe;
		$arreglo[$i]['gerente']		= $row->gerente;
		$arreglo[$i]['nombre']		= $row->nombre;
		$arreglo[$i]['apellido']	= $row->apellido;
		$arreglo[$i]['email']			= $row->email;
		$arreglo[$i]['direccion']	= $row->direccion;
		$arreglo[$i]['localidad']	= $row->localidad;
		$arreglo[$i]['provincia']	= $row->provincia;
		$arreglo[$i]['telefono']	= $row->telefono;
		$i++;
	}		
	//retornar el arreglo
	return $arreglo;
}

//--------------------------------------------------------------------------------------------------------------------------------------
function getCodigos($buscar='',$usado=''){
	//crear la conexion
	$this->database = new Database();
	$this->database->OpenLink();
	$this->database->SelectDB();

	//crear e instancear el paginado
	$this->paginado = new paginado($this->database->link);
	$this->paginado->pagina($this->pagina);
	$this->paginado->porPagina($this->regxpag);

	$sql = "select * from codigos where 1 = 1";
	if($buscar	!= '') $sql .= " and codigo like '%".$buscar."%'";
	if($usado	!= '') $sql .= " and usado = '".$usado."'";
	$sql .= " order by idcodigo asc";

	//armar el arreglo de objetos	
	$this->paginado->query($sql);

	$arreglo = array();	
	$i=0;
	while($row = $this->paginado->obtenerArray()){
		$arreglo[$i]['idcodigo']	= $row['idcodigo'];
		$arreglo[$i]['codigo']		= $row['codigo'];
		$arreglo[$i]['puntos']		= $row['puntos'];
		$arreglo[$i]['usado']			= $row['usado'];
		$i++;
	}		
	//retornar el arreglo
	return $arreglo;
}

//--------------------------------------------------------------------------------------------------------------------------------------
function getPuntosAsignados($desde='',$hasta='',$id=''){
	//crear la conexion
	$this->database = new Database();
	$this->database->OpenLink();
	$this->database->SelectDB();

	//crear e instancear el paginado
	$this->paginado = new paginado($this->database->link);
	$this->paginado->pagina($this->pagina);
	$this->paginado->porPagina($this->regxpag);

	$sql = 'select pt.*,sc.nombre as nombre,sc.apellido as apellido from puntos pt, socios sc where pt.idcliente = sc.idsocio';
	if($desde != '') $sql .= " and (DATE_FORMAT(pt.fecha, '%Y-%m-%d') >= STR_TO_DATE('".$desde."', '%d/%m/%Y'))";
	if($hasta != '') $sql .= " and (DATE_FORMAT(pt.fecha, '%Y-%m-%d') <= STR_TO_DATE('".$hasta."', '%d/%m/%Y'))";
	if($id	!= '') $sql .= " and pt.idcliente = '".$id."'";
	$sql .= ' order by pt.fecha_carga desc, pt.fecha desc';

	//armar el arreglo de objetos
	$this->paginado->query($sql);

	$arreglo = array();
	$i=0;
	while($row = $this->paginado->obtenerArray()){
		$arreglo[$i]['identrada']			= $row['identrada'];
		$arreglo[$i]['idcliente']			= $row['idcliente'];
		$arreglo[$i]['nombre']				= $row['nombre'].' '.$row['apellido'];
		$arreglo[$i]['puntos']				= $row['puntos'];
		$arreglo[$i]['fecha']					= $row['fecha'];
		$arreglo[$i]['motivo']				= $row['linea'];
		$arreglo[$i]['observaciones']	= $row['observaciones'];
		$arreglo[$i]['fecha_carga']		= $row['fecha_carga'];
		$i++;
	}
	//retornar el arreglo
	return $arreglo;
}

function getMovimientosManuales($idcli,$desde='',$hasta='') {
	//crear la conexion
	$this->database = new Database();
	$this->database->OpenLink();
	$this->database->SelectDB();

	//crear e instancear el paginado
	$this->paginado = new paginado($this->database->link);
	$this->paginado->pagina($this->pagina);
	$this->paginado->porPagina($this->regxpag);

	$sql = 'select pt.* from puntos pt where pt.idcliente = '.$idcli;
	if($desde != '') $sql .= " and (DATE_FORMAT(pt.fecha, '%Y-%m-%d') >= STR_TO_DATE('".$desde."', '%d/%m/%Y'))";
	if($hasta != '') $sql .= " and (DATE_FORMAT(pt.fecha, '%Y-%m-%d') <= STR_TO_DATE('".$hasta."', '%d/%m/%Y'))";	
	$sql .= ' order by pt.fecha_carga desc, pt.fecha desc';

	//armar el arreglo de objetos	
	$this->paginado->query($sql);

	$arreglo = array();	
	$i=0;
	while($row = $this->paginado->obtenerArray())	{
		$arreglo[$i]['identrada']			= $row['identrada'];
		$arreglo[$i]['idcliente']			= $row['idcliente'];
		$arreglo[$i]['puntos']				= $row['puntos'];
		$arreglo[$i]['fecha']					= $row['fecha'];
		$arreglo[$i]['motivo']				= $row['linea'];
		$arreglo[$i]['observaciones']	= $row['observaciones'];
		$arreglo[$i]['fecha_carga']		= $row['fecha_carga'];
		$i++;
	}
	//retornar el arreglo
	return $arreglo;
}

//--------------------------------------------------------------------------------------------------------------------------------------
function getMovimientosSocio($idcli) {
	//crear la conexion
	$this->database = new Database();
	$this->database->OpenLink();
	$this->database->SelectDB();

	//crear e instancear el paginado
	$this->paginado = new paginado($this->database->link);
	$this->paginado->pagina($this->pagina);
	$this->paginado->porPagina($this->regxpag);

	$sql.= "(select '' as idpremio, linea as tipo, observaciones, puntos as numero, fecha as fecha, '' as estado from puntos where idcliente = '$idcli') ";
	$sql.= ' union all ';
	$sql.= "(select pr.idpremio, 'canje' as tipo, '' as observaciones, c.valor as numero, c.fecha as fecha, c.estado from canjes c, premios pr where c.idcliente = '$idcli' and c.estado <> 'anulado' and c.estado <> 'devuelto' and c.idpremio = pr.idpremio)  ";
	$sql.= ' union all ';
	$sql.= "(select pr.idpremio, 'canje' as tipo, '' as observaciones, '0' as numero, c.fecha as fecha, c.estado from canjes c, premios pr where c.idcliente = '$idcli' and (c.estado = 'anulado' or c.estado = 'devuelto') and c.idpremio = pr.idpremio)  ";
	$sql.= 'order by fecha desc';

	//armar el arreglo de objetos
	$this->paginado->query($sql);

	$arreglo = array();
	$i=0;
	while($row = $this->paginado->obtenerArray())	{
		$arreglo[$i]['tipo']					= $row['tipo'];
		$arreglo[$i]['observaciones']	= $row['observaciones'];
		$arreglo[$i]['idpremio']			= $row['idpremio'];
		$arreglo[$i]['estado']				= $row['estado'];
		$arreglo[$i]['numero']				= $row['numero'];
		$arreglo[$i]['fecha']					= $row['fecha'];
		$i++;
	}
	//retornar el arreglo
	return $arreglo;
}

//--------------------------------------------------------------------------------------------------------------------------------------
function getPlanillaPuntos($desde='',$hasta='',$id=''){
	$this->database = new Database();
	$arreglo = array();
	$i = 0;
	
	$sql = 'select pt.*,sc.nombre as nombre,sc.apellido as apellido from puntos pt, socios sc where pt.idcliente = sc.idsocio';
	if($desde != '') $sql .= " and (DATE_FORMAT(pt.fecha_carga, '%Y-%m-%d') >= STR_TO_DATE('".$desde."', '%d/%m/%Y'))";
	if($hasta != '') $sql .= " and (DATE_FORMAT(pt.fecha_carga, '%Y-%m-%d') <= STR_TO_DATE('".$hasta."', '%d/%m/%Y'))";
	if($id	!= '') $sql .= " and pt.idcliente = '".$id."'";
	$sql .= ' order by pt.fecha_carga desc, pt.fecha desc';

	$result = $this->database->query($sql);
	$result = $this->database->result;	

	while ($row = mysql_fetch_object($result)){
		$arreglo[$i]['identrada']			= $row->identrada;
		$arreglo[$i]['idcliente']			= $row->idcliente;
		$arreglo[$i]['nombre']				= stripslashes($row->nombre.' '.$row->apellido);
		$arreglo[$i]['puntos']				= $row->puntos;
		$arreglo[$i]['fecha']					= $row->fecha;
		$arreglo[$i]['motivo']				= $row->linea;
		$arreglo[$i]['observaciones']	= $row->observaciones;
		$arreglo[$i]['fecha_carga']		= $row->fecha_carga;
		$i++;
	}
	//retornar el arreglo
	return $arreglo;
}

//---------------------------------------------------------------------------------------------------------------------
function getPuntosCliente($idcliente){
	$this->database = new Database();
	$puntos	= 0;
	$sql 		= "select sum(puntos) as puntos from puntos where idcliente = '$idcliente'";
	$result = $this->database->query($sql);
	$result = $this->database->result;
	if ($row = mysql_fetch_object($result))
		$puntos =	$row->puntos;
	return $puntos;	
}

//---------------------------------------------------------------------------------------------------------------------
function getPuntosCliente2($idcliente,$desde='',$hasta=''){
	$this->database = new Database();
	$puntos	= 0;
	$sql = "select sum(puntos) as puntos from puntos where idcliente = '$idcliente'";
	if($desde != '') $sql .= " and (DATE_FORMAT(fecha_carga, '%Y-%m-%d') >= STR_TO_DATE('".$desde."', '%d/%m/%Y'))";
	if($hasta != '') $sql .= " and (DATE_FORMAT(fecha_carga, '%Y-%m-%d') <= STR_TO_DATE('".$hasta."', '%d/%m/%Y'))";
	$result 	= $this->database->query($sql);
	$result 	= $this->database->result;
	if ($row = mysql_fetch_object($result))
		$puntos =	$row->puntos;
	return $puntos;	
}

//---------------------------------------------------------------------------------------------------------------------
function getUltimosPuntosCliente($idcliente){
	$this->database = new Database();
	$fecha	= '';
	$sql 		= "select max(fecha) as ultima_entrada from puntos where idcliente = '$idcliente'";
	$result = $this->database->query($sql);
	$result = $this->database->result;
	if ($row = mysql_fetch_object($result))
		$fecha =	$row->ultima_entrada;
	return $fecha;	
}

//---------------------------------------------------------------------------------------------------------------------
function getCanjes($buscar='',$estado='',$desde='',$hasta='',$tipo='',$tipos=''){
	$busqueda = array();
	if($buscar != '') $busqueda = preg_split('/ /',$buscar);

	$this->database = new Database();
	$arreglo = array();
	$i = 0;

	$sql = 'select ca.*, pr.nombre as premio, pr.tipo as tipo, CONCAT(sc.nombre," ",sc.apellido) as cliente, sc.email as email, sc.codigo as codigo, sc.telefono as telefono from premios pr, socios sc, canjes ca where ca.idcliente = sc.idsocio and ca.idpremio = pr.idpremio';
	if(count($busqueda)>0){
		$fin = count($busqueda);
		for($j=0;$j<$fin;$j++){
			$sql .= " and (sc.apellido like '%".$busqueda[$j]."%' or sc.codigo like '%".$busqueda[$j]."%')";
		}
	}

	if($estado!='')	$sql .= " and ca.estado = '".$estado."'";
	if($desde != '') $sql .= " and (DATE_FORMAT(ca.fecha, '%Y-%m-%d') >= STR_TO_DATE('".$desde."', '%d/%m/%Y'))";
	if($hasta != '') $sql .= " and (DATE_FORMAT(ca.fecha, '%Y-%m-%d') <= STR_TO_DATE('".$hasta."', '%d/%m/%Y'))";
	if($tipo!='')	$sql .= " and pr.tipo = '".$tipo."'";
	if($tipos!='')	$sql .= " and pr.tipo IN (".$tipos.")";
	$sql .= ' order by ca.idcanje desc';

	$result = $this->database->query($sql);
	$result = $this->database->result;
	while ($row = mysql_fetch_object($result))	{
		$arreglo[$i]['idcanje']				= $row->idcanje;
		$arreglo[$i]['idcliente']			= $row->idcliente;
		$arreglo[$i]['idpremio']			= $row->idpremio;
		$arreglo[$i]['tipo']					= $row->tipo;
		$arreglo[$i]['estado']				= $row->estado;
		$arreglo[$i]['fecha']					= $row->fecha;
		$arreglo[$i]['valor']					= $row->valor;
		$arreglo[$i]['seguimiento']		= $row->seguimiento;
		$arreglo[$i]['lugar_entrega']	= $row->lugar_entrega;
		$arreglo[$i]['observaciones']	= $row->observaciones;
		$arreglo[$i]['premio']				= $row->premio;
		$arreglo[$i]['cliente']				= $row->cliente;
		$arreglo[$i]['codigo_unico']	= $row->codigo;
		$arreglo[$i]['email']					= $row->email;
		$arreglo[$i]['fijo']					= $row->telefono;
		$i++;
	}		
	//retornar el arreglo
	return $arreglo;
}

//---------------------------------------------------------------------------------------------------------------------
function getCanjesPlanilla($buscar='',$estado='',$desde='',$hasta='',$tipo=''){
	$busqueda = array();
	if($buscar != '') $busqueda = preg_split('/ /',$buscar);

	$this->database = new Database();
	$arreglo = array();
	$i = 0;

	$sql = 'select ca.*, pr.nombre as premio, pr.tipo as tipo, sc.nombre, sc.apellido, sc.codigo, sc.email as email, sc.telefono as fijo from premios pr, socios sc, canjes ca where ca.idcliente = sc.idsocio and ca.idpremio = pr.idpremio';
	if(count($busqueda)>0){
		$fin = count($busqueda);
		for($j=0;$j<$fin;$j++){
			$sql .= " and (sc.apellido like '%".$busqueda[$j]."%')";
		}
	}
	if($estado!='')	$sql .= " and ca.estado = '".$estado."'";
	if($desde != '') $sql .= " and (DATE_FORMAT(ca.fecha, '%Y-%m-%d') >= STR_TO_DATE('".$desde."', '%d/%m/%Y'))";
	if($hasta != '') $sql .= " and (DATE_FORMAT(ca.fecha, '%Y-%m-%d') <= STR_TO_DATE('".$hasta."', '%d/%m/%Y'))";
	if($tipo!='')	$sql .= " and pr.tipo = '".$tipo."'";
	$sql .= ' order by ca.idcanje desc';
	
	$result = $this->database->query($sql);
	$result = $this->database->result;	
	while ($row = mysql_fetch_object($result)){
		$arreglo[$i]['idcanje']				= $row->idcanje;
		$arreglo[$i]['codigo_unico']	= $row->codigo;
		$arreglo[$i]['idcliente']			= $row->idcliente;
		$arreglo[$i]['idpremio']			= $row->idpremio;
		$arreglo[$i]['tipo']					= $row->tipo;
		$arreglo[$i]['estado']				= $row->estado;
		$arreglo[$i]['fecha']					= $row->fecha;
		$arreglo[$i]['valor']					= $row->valor;
		$arreglo[$i]['lugar_entrega']	= $row->lugar_entrega;
		$arreglo[$i]['observaciones']	= $row->observaciones;
		$arreglo[$i]['premio']				= $row->premio;
		$arreglo[$i]['cliente']				= $row->nombre.' '.$row->apellido;
		$arreglo[$i]['email']					= $row->email;
		$arreglo[$i]['fijo']					= $row->telefono;
		$i++;
	}
	//retornar el arreglo
	return $arreglo;
}

//---------------------------------------------------------------------------------------------------------------------
function getCanjesPlanillaSolicitados(){
	$busqueda = array();
	if($buscar != '') $busqueda = preg_split('/ /',$buscar);

	$this->database = new Database();
	$arreglo = array();
	$i = 0;

	$sql = 'select ca.*, pr.nombre as premio, pr.tipo as tipo, sc.nombre, sc.apellido, sc.codigo, sc.email as email, sc.telefono as telefono from premios pr, socios sc, canjes ca where ca.idcliente = sc.idsocio and ca.idpremio = pr.idpremio';
	$sql .= " and ca.estado = 'solicitado'";
	$sql .= ' order by ca.idcanje desc';

	$result = $this->database->query($sql);
	$result = $this->database->result;	
	$can = new canje();
	while ($row = mysql_fetch_object($result)){
		$arreglo[$i]['idcanje']				= $row->idcanje;		
		$arreglo[$i]['codigo']				= $row->codigo;		
		$arreglo[$i]['idcliente']			= $row->idcliente;		
		$arreglo[$i]['idpremio']			= $row->idpremio;		
		$arreglo[$i]['tipo']					= $row->tipo;		
		$arreglo[$i]['estado']				= $row->estado;		
		$arreglo[$i]['fecha']					= $row->fecha;
		$arreglo[$i]['valor']					= $row->valor;		
		$arreglo[$i]['lugar_entrega']	= $row->lugar_entrega;		
		$arreglo[$i]['observaciones']	= $row->observaciones;		
		$arreglo[$i]['premio']				= $row->premio;
		$arreglo[$i]['cliente']				= $row->nombre.' '.$row->apellido;
		$arreglo[$i]['email']					= $row->email;
		$arreglo[$i]['fijo']					= $row->telefono;
		$i++;

		$can->insertLog($row->idcanje, "'en proceso'");
	}

	//paso todos los solicitados a procesados
	$sql = "update canjes set estado = 'en proceso' where estado = 'solicitado'";
	$result = $this->database->query($sql);

	//retornar el arreglo
	return $arreglo;
}

//---------------------------------------------------------------------------------------------------------------------
function getLogscanje($idcanje){
	$this->database = new Database();
	$arreglo = array();
	$i = 0;

	$sql = "select c.*, u.usuario from log_canjes c, usuarios u where c.idusuario = u.idusuario and c.idcanje = '$idcanje' order by c.fecha asc";

	$result = $this->database->query($sql);
	$result = $this->database->result;	
	while ($row = mysql_fetch_object($result)){
		$arreglo[$i]['idlog']		= $row->idlog;
		$arreglo[$i]['estado']	= $row->estado;
		$arreglo[$i]['fecha']		= $row->fecha;
		$arreglo[$i]['usuario']	= $row->usuario;
		$i++;
	}
	//retornar el arreglo
	return $arreglo;
}

//---------------------------------------------------------------------------------------------------------------------
function getCanjesClienteTotal($idcliente){
	$this->database = new Database();
	$canjes	= 0;
	$sql 		= "select sum(valor) as canjes from canjes where idcliente = '$idcliente' and estado <> 'anulado' and estado <> 'devuelto'";
	$result = $this->database->query($sql);
	$result = $this->database->result;
	if ($row = mysql_fetch_object($result))
		$canjes =	$row->canjes;
	return $canjes;
}

//---------------------------------------------------------------------------------------------------------------------
function getCanjesClienteTotal2($idcliente,$desde='',$hasta=''){
	$this->database = new Database();
	$canjes	= 0;
	$sql = "select sum(valor) as canjes from canjes where idcliente = '$idcliente' and estado <> 'anulado' and estado <> 'devuelto'";
	if($desde != '') $sql .= " and (DATE_FORMAT(fecha, '%Y-%m-%d') >= STR_TO_DATE('".$desde."', '%d/%m/%Y'))";
	if($hasta != '') $sql .= " and (DATE_FORMAT(fecha, '%Y-%m-%d') <= STR_TO_DATE('".$hasta."', '%d/%m/%Y'))";
	$result = $this->database->query($sql);
	$result = $this->database->result;
	if ($row = mysql_fetch_object($result))
		$canjes =	$row->canjes;
	return $canjes;
}

//---------------------------------------------------------------------------------------------------------------------
function getUltimosCanjesCliente($idcliente){
	$this->database = new Database();
	$fecha	= '';
	$sql 		= "select max(fecha) as ultimo_canje from canjes where idcliente = '$idcliente'";
	$result = $this->database->query($sql);
	$result = $this->database->result;
	if ($row = mysql_fetch_object($result))
		$fecha =	$row->ultimo_canje;
	return $fecha;
}

//---------------------------------------------------------------------------------------------------------------------
function getValorMaximo(){
	$this->database = new Database();
	$fecha	= '';
	$sql 		= 'select max(valor) as maximo from premios';
	$result = $this->database->query($sql);
	$result = $this->database->result;
	if ($row = mysql_fetch_object($result))
		return $row->maximo;
	return 1000;
}

//---------------------------------------------------------------------------------------------------------------------
function getPremios($buscar='',$campania='',$destacado=''){
	$busqueda = array();
	if($buscar != '') $busqueda = preg_split('/ /',$buscar);

	//crear la conexion
	$this->database = new Database();
	$this->database->OpenLink();
	$this->database->SelectDB();

	//crear e instancear el paginado
	$this->paginado = new paginado($this->database->link);
	$this->paginado->pagina($this->pagina);
	$this->paginado->porPagina($this->regxpag);

	$sql = 'select * from premios where 1 = 1';
	if(count($busqueda)>0){
		$fin = count($busqueda);
		for($j=0;$j<$fin;$j++){
			$sql .= " and (nombre like '%".$busqueda[$j]."%' or detalle like '%".$busqueda[$j]."%')";
		}
	}	
	if($campania!='') $sql .= " and idcampania = '".$campania."'";
	if($destacado!='') $sql .= " and destacado = '".$destacado."'";
	$sql .= ' order by nombre asc';
	
	//armar el arreglo de objetos	
	$this->paginado->query($sql);
	
	$arreglo = array();	
	$i = 0;
	while($row = $this->paginado->obtenerArray()){
		$arreglo[$i]['idpremio']				= $row['idpremio'];		
		$arreglo[$i]['nombre']					= stripslashes($row['nombre']);		
		$arreglo[$i]['imagen']					= $row['imagen'];		
		$arreglo[$i]['tipo']						= $row['tipo'];
		$arreglo[$i]['idcampania']			= $row['idcampania'];
		$arreglo[$i]['detalle']					= stripslashes($row['detalle']);
		$arreglo[$i]['valor']						= $row['valor'];
		$arreglo[$i]['stock_inicial']		= $row['stock_inicial'];
		$arreglo[$i]['vigencia_desde']	= $row['vigencia_desde'];
		$arreglo[$i]['vigencia_hasta']	= $row['vigencia_hasta'];
		$arreglo[$i]['estado']					= $row['estado'];
		$arreglo[$i]['origen']					= $row['origen'];
		$arreglo[$i]['garantia']				= $row['garantia'];
		$arreglo[$i]['destacado']				= $row['destacado'];
		$i++;
	}		
	//retornar el arreglo
	return $arreglo;
}

//---------------------------------------------------------------------------------------------------------------------
function getPremiosHome($fil_min='',$fil_max='',$fil_cat='',$fil_tp='',$fil_bus=''){
	$busqueda = array();
	if($fil_bus != '') $busqueda = preg_split('/ /',$fil_bus);
	if($_SESSION['QLMSF_idgrupo']==3) 
		$grupo = '1,2'; 
	else if($_SESSION['QLMSF_idgrupo']==4)
		$grupo = '2'; 
	else 
		$grupo = $_SESSION['QLMSF_idgrupo'];
	//crear la conexion
	$this->database = new Database();
	$this->database->OpenLink();
	$this->database->SelectDB();

	//crear e instancear el paginado
	$this->paginado = new paginado($this->database->link);
	$this->paginado->pagina($this->pagina);
	$this->paginado->porPagina($this->regxpag);

	//falta ver el tema de stock
	$sql = 'select distinct p.*, c.nombre as categoria from premios p, premios_grupos pg, campanias c where p.estado = "P" and p.idpremio = pg.idpremio and pg.idgrupo in ('.$grupo.') and p.idcampania = c.idcampania';
	if(count($busqueda)>0){
		$fin = count($busqueda);
		for($j=0;$j<$fin;$j++){
			$sql .= " and (p.nombre like '%".$busqueda[$j]."%' or p.detalle like '%".$busqueda[$j]."%')";
		}
	}
	if($fil_cat != '') $sql .= ' and p.idcampania = \''.$fil_cat.'\'';
	if($fil_tp != '') $sql .= ' and p.tipo = \''.$fil_tp.'\'';
	if($fil_min != '') $sql .= ' and p.valor >= \''.$fil_min.'\'';
	if($fil_max != '') $sql .= ' and p.valor <= \''.$fil_max.'\'';
	$sql .= ' order by p.nombre asc';

	//armar el arreglo de objetos	
	$this->paginado->query($sql);

	$arreglo = array();	
	$i = 0;
	while($row = $this->paginado->obtenerArray()){
		$arreglo[$i]['idpremio']				= $row['idpremio'];		
		$arreglo[$i]['nombre']					= stripslashes($row['nombre']);		
		$arreglo[$i]['imagen']					= $row['imagen'];		
		$arreglo[$i]['tipo']						= $row['tipo'];
		$arreglo[$i]['idcampania']			= $row['idcampania'];
		$arreglo[$i]['detalle']					= stripslashes($row['detalle']);
		$arreglo[$i]['valor']						= $row['valor'];
		$arreglo[$i]['stock_inicial']		= $row['stock_inicial'];
		$arreglo[$i]['vigencia_desde']	= $row['vigencia_desde'];
		$arreglo[$i]['vigencia_hasta']	= $row['vigencia_hasta'];
		$arreglo[$i]['estado']					= $row['estado'];
		$arreglo[$i]['origen']					= $row['origen'];
		$arreglo[$i]['garantia']				= $row['garantia'];
		$arreglo[$i]['categoria']				= $row['categoria'];
		$i++;
	}		
	//retornar el arreglo
	return $arreglo;
}

//---------------------------------------------------------------------------------------------------------------------
function getPremiosHomePopulares(){
	$busqueda = array();
	if($_SESSION['QLMSF_idgrupo']==3) 
		$grupo = '1,2'; 
	else if($_SESSION['QLMSF_idgrupo']==4)
		$grupo = '2'; 
	else 
		$grupo = $_SESSION['QLMSF_idgrupo'];
	//crear la conexion
	$this->database = new Database();

	$sql = 'select distinct p.idpremio, p.nombre, p.imagen, p.valor, count(c.idcanje) as canjes, k.nombre as categoria from premios p, premios_grupos pg, canjes c, campanias k where p.estado = "P" and p.idpremio = c.idpremio and p.idpremio = pg.idpremio and pg.idgrupo in ('.$grupo.') and p.idcampania = k.idcampania group by p.idpremio, p.nombre, p.imagen order by canjes desc limit 4';

	$result 	= $this->database->query($sql);
	$result 	= $this->database->result;

	$arreglo = array();	
	$i = 0;
	while($row = mysql_fetch_object($result)){
		$arreglo[$i]['idpremio']	= $row->idpremio;
		$arreglo[$i]['nombre']		= stripslashes($row->nombre);
		$arreglo[$i]['imagen']		= $row->imagen;
		$arreglo[$i]['valor']			= $row->valor;
		$arreglo[$i]['categoria']	= $row->categoria;
		$i++;
	}
	//retornar el arreglo
	return $arreglo;
}

//---------------------------------------------------------------------------------------------------------------------
function getPremiosHomeAlcance($puntos){
	$busqueda = array();

	//crear la conexion
	$this->database = new Database();

	$sql = 'select distinct p.idpremio, p.nombre, p.imagen, p.valor, c.nombre as categoria from premios p, premios_grupos pg, campanias c where p.estado = "P" and p.valor <= '.$puntos.' and p.idpremio = pg.idpremio and pg.idgrupo = "'.$_SESSION['QLMSF_idgrupo'].'" and p.idcampania = c.idcampania ORDER BY RAND() limit 4';

	$result	= $this->database->query($sql);
	$result = $this->database->result;

	$arreglo = array();	
	$i = 0;
	while($row = mysql_fetch_object($result))	{
		$arreglo[$i]['idpremio']	= $row->idpremio;
		$arreglo[$i]['nombre']		= stripslashes($row->nombre);
		$arreglo[$i]['imagen']		= $row->imagen;
		$arreglo[$i]['valor']			= $row->valor;
		$arreglo[$i]['categoria']	= $row->categoria;
		$i++;
	}
	//retornar el arreglo
	return $arreglo;
}

//---------------------------------------------------------------------------------------------------------------------
function getPremiosHomeNuevos(){
	$busqueda = array();
	if($_SESSION['QLMSF_idgrupo']==3) 
		$grupo = '1,2'; 
	else if($_SESSION['QLMSF_idgrupo']==4)
		$grupo = '2'; 
	else 
		$grupo = $_SESSION['QLMSF_idgrupo'];
	//crear la conexion
	$this->database = new Database();

	$sql = 'select distinct p.idpremio, p.nombre, p.imagen, p.valor, c.nombre as categoria from premios p, premios_grupos pg, campanias c where p.estado = "P" and p.idpremio = pg.idpremio and pg.idgrupo in ('.$grupo.') and p.idcampania = c.idcampania order by p.idpremio desc limit 4';

	$result	= $this->database->query($sql);
	$result = $this->database->result;

	$arreglo = array();	
	$i = 0;
	while($row = mysql_fetch_object($result)){
		$arreglo[$i]['idpremio']	= $row->idpremio;
		$arreglo[$i]['nombre']		= stripslashes($row->nombre);
		$arreglo[$i]['imagen']		= $row->imagen;
		$arreglo[$i]['valor']			= $row->valor;
		$arreglo[$i]['categoria']	= $row->categoria;
		$i++;
	}
	//retornar el arreglo
	return $arreglo;
}

//---------------------------------------------------------------------------------------------------------------------
function getPremiosHomeDestacados(){
	//crear la conexion
	$this->database = new Database();
	if($_SESSION['QLMSF_idgrupo']==3) 
		$grupo = '1,2'; 
	else if($_SESSION['QLMSF_idgrupo']==4)
		$grupo = '2'; 
	else 
		$grupo = $_SESSION['QLMSF_idgrupo'];
	$sql = 'select distinct p.idpremio, p.nombre, p.imagen, p.valor, c.nombre as categoria from premios p, premios_grupos pg, campanias c where p.estado = "P" and destacado = "S" and p.idpremio = pg.idpremio and pg.idgrupo in ('.$grupo.') and p.idcampania = c.idcampania order by RAND() limit 4';

	$result	= $this->database->query($sql);
	$result = $this->database->result;

	$arreglo = array();	
	$i = 0;
	while($row = mysql_fetch_object($result)){
		$arreglo[$i]['idpremio']	= $row->idpremio;
		$arreglo[$i]['nombre']		= stripslashes($row->nombre);
		$arreglo[$i]['imagen']		= $row->imagen;
		$arreglo[$i]['valor']			= $row->valor;
		$arreglo[$i]['categoria']	= $row->categoria;
		$i++;
	}
	//retornar el arreglo
	return $arreglo;
}

//---------------------------------------------------------------------------------------------------------------------
function getPremiosPlanilla($buscar='',$campania=''){
	$busqueda = array();
	if($buscar != '') $busqueda = preg_split('/ /',$buscar);

	$this->database = new Database();
	$arreglo = array();
	$i = 0;

	$sql = 'select * from premios where 1 = 1';
	if(count($busqueda)>0)
	{
		$fin = count($busqueda);
		for($j=0;$j<$fin;$j++)
		{
			$sql .= " and (nombre like '%".$busqueda[$j]."%' or detalle like '%".$busqueda[$j]."%')";
		}
	}	
	if($campania!='') $sql .= " and idcampania = '".$campania."'";
	$sql .= ' order by nombre asc';
	
	$result = $this->database->query($sql);
	$result = $this->database->result;	
	while ($row = mysql_fetch_object($result)){
		$arreglo[$i]['idpremio']				= $row->idpremio;		
		$arreglo[$i]['nombre']					= $row->nombre;		
		$arreglo[$i]['tipo']						= $row->tipo;
		$arreglo[$i]['idcampania']			= $row->idcampania;
		$arreglo[$i]['detalle']					= $row->detalle;
		$arreglo[$i]['valor']						= $row->valor;
		$arreglo[$i]['stock_inicial']		= $row->stock_inicial;
		$arreglo[$i]['vigencia_desde']	= $row->vigencia_desde;
		$arreglo[$i]['vigencia_hasta']	= $row->vigencia_hasta;
		$arreglo[$i]['estado']					= $row->estado;
		$arreglo[$i]['origen']					= $row->origen;
		$arreglo[$i]['garantia']				= $row->garantia;
		$i++;
	}		
	//retornar el arreglo
	return $arreglo;
}

//---------------------------------------------------------------------------------------------------------------------
function getCampanias($buscar='', $soloactivas=false){
	$busqueda = array();
	if($buscar != '') $busqueda = preg_split('/ /',$buscar);

	//crear la conexion
	$this->database = new Database();
	$this->database->OpenLink();
	$this->database->SelectDB();

	//crear e instancear el paginado
	$this->paginado = new paginado($this->database->link);
	$this->paginado->pagina($this->pagina);
	$this->paginado->porPagina($this->regxpag);

	$sql = 'select * from campanias where 1 = 1';
	if(count($busqueda)>0){
		$fin = count($busqueda);
		for($j=0;$j<$fin;$j++){
			$sql .= " and (nombre like '%".$busqueda[$j]."%')";
		}
	}
	if($soloactivas) $sql .= " and (DATE(NOW()) >= fecha_inicial and  DATE(NOW()) <= fecha_final)";
	$sql .= ' order by nombre asc';
	
	//armar el arreglo de objetos
	$this->paginado->query($sql);

	$arreglo = array();
	$i = 0;
	while($row = $this->paginado->obtenerArray()) {
		$arreglo[$i]['idcampania'] = $row['idcampania'];
		$arreglo[$i]['nombre']		 = stripslashes($row['nombre']);		
		$i++;
	}		
	//retornar el arreglo
	return $arreglo;
}

//---------------------------------------------------------------------------------------------------------------------
function getCampaniasCombo(){
	$this->database = new Database();
	$arreglo = array();
	$i = 0;
	$sql 		= 'select * from campanias where 1 = 1 order by nombre asc';
	$result = $this->database->query($sql);
	$result = $this->database->result;	
	while ($row = mysql_fetch_object($result)){
		$arreglo[$i]['idcampania']	= $row->idcampania;
		$arreglo[$i]['nombre']			= $row->nombre;
		$i++;
	}
	//retornar el arreglo
	return $arreglo;
}

//---------------------------------------------------------------------------------------------------------------------
function getCodigosPremio($buscar='',$disponible='',$idpremio){
	//crear la conexion
	$this->database = new Database();
	$this->database->OpenLink();
	$this->database->SelectDB();

	//crear e instancear el paginado
	$this->paginado = new paginado($this->database->link);
	$this->paginado->pagina($this->pagina);
	$this->paginado->porPagina($this->regxpag);

	$sql = "select * from premios_codigos where idpremio = '$idpremio'";
	if($buscar != '') $sql .= " and codigo like '%".$buscar."%'";
	if($disponible	!= '') $sql .= " and disponible = '".$disponible."'";
	$sql .= ' order by disponible desc, fechaalta, idcodigo asc';

	//armar el arreglo de objetos
	$this->paginado->query($sql);

	$arreglo = array();
	$i=0;
	while($row = $this->paginado->obtenerArray()){
		$arreglo[$i]['idcodigo']		= $row['idcodigo'];
		$arreglo[$i]['codigo']			= $row['codigo'];
		$arreglo[$i]['disponible']	= $row['disponible'];
		$arreglo[$i]['fechaalta']		= $row['fechaalta'];
		$i++;
	}
	//retornar el arreglo
	return $arreglo;
}

//---------------------------------------------------------------------------------------------------------------------
function getGrupos($buscar=''){
	$busqueda = array();
	if($buscar != '') $busqueda = preg_split('/ /',$buscar);
	
	//crear la conexion
	$this->database = new Database();
	$this->database->OpenLink();
	$this->database->SelectDB();
		
	//crear e instancear el paginado
	$this->paginado = new paginado($this->database->link);
	$this->paginado->pagina($this->pagina);
	$this->paginado->porPagina($this->regxpag);
	
	$sql = 'select * from grupos where 1 = 1';
	if(count($busqueda)>0){
		$fin = count($busqueda);
		for($j=0;$j<$fin;$j++)		{
			$sql .= " and (nombre like '%".$busqueda[$j]."%' or descripcion like '%".$busqueda[$j]."%')";
		}
	}	
	$sql .= ' order by nombre asc';
	
	//armar el arreglo de objetos	
	$this->paginado->query($sql);
	
	$arreglo = array();	
	$i = 0;
	while($row = $this->paginado->obtenerArray()){
		$arreglo[$i]['idgrupo']			= $row['idgrupo'];		
		$arreglo[$i]['nombre']			= stripslashes($row['nombre']);		
		$arreglo[$i]['descripcion']	= stripslashes($row['descripcion']);
		$i++;
	}		
	//retornar el arreglo
	return $arreglo;
}

//---------------------------------------------------------------------------------------------------------------------
function getGruposCombo(){
	$this->database = new Database();
	$arreglo = array();
	$i = 0;

	$sql 		= 'select * from grupos where 1 = 1 order by nombre asc';
	$result = $this->database->query($sql);
	$result = $this->database->result;	
	while ($row = mysql_fetch_object($result)){
		$arreglo[$i]['idgrupo']	= $row->idgrupo;
		$arreglo[$i]['nombre']	= $row->nombre;
		$i++;
	}		
	//retornar el arreglo
	return $arreglo;
}

//---------------------------------------------------------------------------------------------------------------------
function getGrupos_Premio($idpremio){
	$this->database = new Database();
	$arreglo = array();
	$i = 0;

	$sql = "select idgrupo from premios_grupos where idpremio = '$idpremio'";
	$result = $this->database->query($sql);
	$result = $this->database->result;
	while ($row = mysql_fetch_object($result)){
		$arreglo[$i]['idgrupo']	= $row->idgrupo;
		$i++;
	}
	//retornar el arreglo
	return $arreglo;
}

//---------------------------------------------------------------------------------------------------------------------
function getSociosMillas($rango,$mes,$anio){
	$this->database = new Database();
	$arreglo = array();
	$i = 0;

	if($rango=='repositor')
		$sql = 'SELECT SUM(p.puntos) AS suma, SUM(p.puntos) AS suma_individual, p.idcliente, s.apellido AS socio, s.idtipo AS grupo, s.region AS equipo, 
		(select pp.ranking_mes from puntos pp where pp.idcliente = p.idcliente and pp.ranking_mes IS NOT NULL and MONTH(p.fecha) = MONTH(pp.fecha) order by pp.fecha desc, pp.fecha_carga desc limit 1) as ranking_month,
		(select pp.ranking_total from puntos pp where pp.idcliente = p.idcliente and pp.ranking_total IS NOT NULL order by pp.fecha_carga desc limit 1) as ranking_todo
		FROM puntos p, socios s WHERE p.idcliente = s.idsocio';
	else
		$sql = 'SELECT SUM(p.puntos) AS suma, SUM(p.millas_individuales) AS suma_individual, p.idcliente, s.apellido AS socio, s.idtipo AS grupo, s.region AS equipo, 
		(select pp.ranking_mes from puntos pp where pp.idcliente = p.idcliente and pp.ranking_mes IS NOT NULL and MONTH(p.fecha) = MONTH(pp.fecha) order by pp.fecha desc, pp.fecha_carga desc limit 1) as ranking_month,
		(select pp.ranking_total from puntos pp where pp.idcliente = p.idcliente and pp.ranking_total IS NOT NULL order by pp.fecha_carga desc limit 1) as ranking_todo 
		FROM puntos p, socios s WHERE p.idcliente = s.idsocio';
	if($rango!='') $sql.= " AND rango = '$rango'";
	if($mes!='') $sql.= " AND MONTH(p.fecha) = '$mes'";
	if($mes!='') $sql.= " AND (select pp.ranking_mes from puntos pp where pp.idcliente = p.idcliente and pp.ranking_mes IS NOT NULL and MONTH(p.fecha) = MONTH(pp.fecha) order by pp.fecha desc, pp.fecha_carga desc limit 1)  is not null ";
	if($mes=='') $sql.= " AND (select pp.ranking_total from puntos pp where pp.idcliente = p.idcliente and pp.ranking_total IS NOT NULL order by pp.fecha desc, pp.fecha_carga desc limit 1)  is not null ";
	if($anio!='') $sql.= " AND YEAR(p.fecha) = '$anio'";	
	if($rango=='distribuidor' || $rango=='repositor')
		$sql.= ' GROUP BY p.idcliente';
	else
		$sql.= ' GROUP BY p.idcliente';

	if($mes!='') {
		$sql .= ' ORDER BY ranking_month asc';
	} else {
		$sql .= ' ORDER BY ranking_todo asc';
	}

	$result = $this->database->query($sql);
	$result = $this->database->result;
	while ($row = mysql_fetch_object($result)){
		$arreglo[$i]['suma']			= $row->suma;
		if(intval($row->suma_individual)>0)
			$arreglo[$i]['suma_individual']	= $row->suma_individual;		
		else
			$arreglo[$i]['suma_individual']	= 0;		
		$arreglo[$i]['idcliente']		= $row->idcliente;
		$arreglo[$i]['socio']			= $row->socio;
		$arreglo[$i]['grupo']			= $row->grupo;
		$arreglo[$i]['equipo']		= str_replace('DIRECTA ','',$row->equipo);
		$i++;
	}
	//retornar el arreglo
	return $arreglo;
}

//---------------------------------------------------------------------------------------------------------------------
function getObjetivosSocios($mes='',$anio='',$idsocio='',$linea='', $tipo='', $orderby='so.apellido asc') {
	$this->database = new Database();
	$arreglo = array();
	$i = 0;

	if($tipo == 'repositor')
		$sql = 'SELECT pu.directa, so.apellido, so.region, pu.idcliente, pu.fecha, pu.linea, MAX(pu.identrada), MAX(pu.objetivo) as objetivo, MAX(pu.avance) as avance, MAX(pu.avance_por) as avance_por FROM puntos pu, socios so WHERE (pu.idcliente = so.idsocio)';
	else
		$sql = 'SELECT so.apellido, so.region, pu.idcliente, pu.fecha, pu.linea, MAX(pu.identrada), MAX(pu.objetivo) as objetivo, MAX(pu.avance) as avance, MAX(pu.avance_por) as avance_por FROM puntos pu, socios so WHERE pu.idcliente = so.idsocio';

	if($idsocio!='') $sql.=	" AND pu.idcliente = '$idsocio'";
	if($tipo!='') $sql.=	" AND so.rango = '$tipo'";
	if($mes!='') $sql.=	" AND MONTH(pu.fecha) = '$mes'";
	if($anio!='') $sql.=	" AND YEAR(pu.fecha) = '$anio'";
	if($linea!='') $sql.=	" AND pu.linea like '%$linea%'";
	if($tipo == 'repositor')	
		$sql.= ' GROUP BY pu.directa, so.apellido, so.region, pu.idcliente, pu.fecha, pu.linea ';
	else
		$sql.= ' GROUP BY so.apellido, so.region, pu.idcliente, pu.fecha, pu.linea ';
	if($orderby!='') $sql.=	' ORDER BY '.$orderby;

	$result = $this->database->query($sql);
	$result = $this->database->result;
	while ($row = mysql_fetch_object($result)){
		$arreglo[$i]['idcliente']		= $row->idcliente;
		$arreglo[$i]['apellido']		= $row->apellido;
		$arreglo[$i]['region']			= $row->region;
		$arreglo[$i]['linea']				= $row->linea;
		$arreglo[$i]['objetivo']		= $row->objetivo;		
		$arreglo[$i]['avance']			= $row->avance;
		$arreglo[$i]['avance_por']	= $row->avance_por;
		$arreglo[$i]['directa']	= $row->directa;
		$i++;
	}
	//retornar el arreglo
	return $arreglo;
}


//PAGINADO
//====================================================================================================
function getPaginacion($vars=''){
	$this->paginado->variables($vars);	
	return '<span class="textCeleste12">'.$this->paginado->anterior().'</span><span class="textNegro12Bold">'.$this->paginado->nroPaginas().'</span><span class="textCeleste12">'.$this->paginado->siguiente().'</span>';
}

function getPaginacionReducida($vars=''){
	$this->paginado->variables($vars);	
	return "<span class='textoMarron12sinhover'><strong>".$this->paginado->anterior()."&#160;</strong></span><span class='textoMarron12sinhover'><strong>".$this->paginado->nroPaginas()."&#160;</strong></span><span class='textoMarron12sinhover'><strong>&#160;".$this->paginado->siguiente()."&#160;&#160;&#160;&#160;&#160;</strong></span>";
}

function getPaginacionFront($vars=''){
	$this->paginado->variables($vars);	
	//return "<span class='linkPaginado'><strong>".$this->paginado->anterior_f()."&#160;</strong></span><span class='linkPaginado'><strong>".$this->paginado->nroPaginas()."&#160;</strong></span><span class='linkPaginado'><strong>&#160;".$this->paginado->siguiente_f()."&#160;&#160;&#160;&#160;&#160;</strong></span>";
	return '
	<section class="gp-paginado text-center">
		<nav aria-label="Page navigation example">
			<ul class="pagination">
				<li class="page-item">
					<a class="page-link" href="#" aria-label="Previous">'.$this->paginado->anterior_f().'</a>
				</li>
				<li class="page-item">'.$this->paginado->nroPaginas().'</li>
				<!--li class="page-item"><a class="page-link" href="#">2</a></li>
				<li class="page-item"><a class="page-link" href="#">3</a></li-->
				<li class="page-item">
					<a class="page-link" href="#" aria-label="Next">'.$this->paginado->siguiente_f().'</a>
				</li>
			</ul>
		</nav>
	</section>';
}

function getTotalRegistros($vars=''){
	return $this->paginado->total();	
}

function getTotalPaginas($vars=''){
	return $this->paginado->totalPaginas();
}

// class : end
}
?>